<div class="section">
	<h2>
		<a href="<?php echo $this->mgHelper->constructUrl(null, null, [], $this->user->getLinkableName()) ?>">
			<?php echo $this->user->getPublicName() ?>
		</a>
		&rsquo;s <?php echo $this->mgHelper->amText() ?> rating statistics
	</h2>
</div>



<div class="section score-dist">
	<h3>
		<i data-title="Count of all entries scored with given rating, in a bar chart form" class="tooltipable icon-tooltip"></i>
		Rating distribution
	</h3>
	<div class="section-body">
		<?php if ($this->scoreDistribution[$this->user->getID()]->getRatedCount() == 0): ?>
			<p>No ratings, no graphs.<br>
			MALgraph can&rsquo;t render those shiny bars until you feed it some data.</p>
		<?php else: ?>
			<ul class="infobox">
				<li>
					<div>
						<span class="prefix">Total rated</span>
						<span class="subject"><?php printf('%d', $this->scoreDistribution[$this->user->getID()]->getRatedCount()) ?></span>
					</div>
				</li>
				<li>
					<div>
						<span class="prefix">Mean score</span>
						<span class="subject"><?php printf('%.02f', $this->scoreDistribution[$this->user->getID()]->getMeanScore()) ?></span>
					</div>
				</li>
				<li>
					<div>
						<span class="prefix">Std dev</span>
						<span class="subject"><?php printf('%.02f', $this->scoreDistribution[$this->user->getID()]->getStandardDeviation()) ?></span>
					</div>
				</li>
				<li>
					<button class="btn export-trigger">Export</button>
				</li>
			</ul>

			<div class="wrapper wrapper-target">
				<div class="target"></div>
				<div class="clear"></div>
			</div>

			<div class="wrapper wrapper-more">
				<div class="more export">
					<p>You can export your rating distribution as an image, which updates automatically every 24h. How about putting it on your MAL profile?</p>
					<div class="wrapper">
						<div class="header">
							<select name="type"></select>
							<select name="theme"></select>
							<a target="_blank" class="btn export-show" href="#">Show</a>
							<div class="clear"></div>
						</div>
						<textarea name="bbcode">[center][url=http://<?php echo $_SERVER['SERVER_NAME'] ?>/<?php echo $this->user->getLinkableName() ?>][img]http://<?php echo $_SERVER['SERVER_NAME'] ?>/export/<?php echo $this->user->getLinkableName() ?>?type=1[/img][/url][/center]</textarea>
					</div>
				</div>

				<?php foreach ($this->scoreDistribution[$this->user->getID()]->getGroupsKeys() as $score): ?>
					<?php $entries = $this->scoreDistribution[$this->user->getID()]->getGroupEntries($score) ?>
					<div class="more" data-id="<?php echo $score ?>">
						<p>
							<?php if ($score == 0): ?>
								Unrated titles
							<?php else: ?>
								Titles rated with <?php echo $score ?>
							<?php endif ?>
							<?php if (!empty($entries)): ?>
								&nbsp;(<?php echo count($entries) ?>)
							<?php endif ?>
							:
						</p>
						<?php if (empty($entries)): ?>
							<?php if ($score == 0): ?>
								<p>Horray! No unrated titles.</p>
							<?php else: ?>
								<p>None!</p>
							<?php endif ?>
						<?php elseif ($this->user->getList($this->am)->isPrivate()): ?>
							<p>Can&rsquo;t show you titles from a private list.</p>
						<?php else: ?>
							<ul>
								<?php foreach ($entries as $entry): ?>
									<?php $amEntry = $entry->getAMEntry() ?>
									<li>
										<a href="http://myanimelist.net/<?php echo $this->mgHelper->amText() ?>/<?php echo $amEntry->getID() ?>">
											<?php echo $amEntry->getTitle() ?>
										</a>
										&nbsp;(
										<?php echo $this->mgHelper->subTypeText($amEntry->getSubType()) ?>
										<?php if ($amEntry->getSubType() != AnimeEntry::SUBTYPE_MOVIE): ?>
											,&nbsp;
											<?php if ($this->am == AMModel::TYPE_MANGA): ?>
												<?php echo $amEntry->getVolumeCount() ?>&nbsp;
												<?php if ($amEntry->getVolumeCount() == 1): ?>
													vol
												<?php else: ?>
													vols
												<?php endif ?>
											<?php else: ?>
												<?php if (!$amEntry->getEpisodeCount()): ?>
													? eps
												<?php elseif ($amEntry->getEpisodeCount() == 1): ?>
													1 ep
												<?php else: ?>
													<?php echo $amEntry->getEpisodeCount() ?>&nbsp;eps
												<?php endif ?>
											<?php endif ?>
										<?php endif ?>
										)
									</li>
								<?php endforeach ?>
							</ul>
						<?php endif ?>
					</div>
				<?php endforeach ?>
			</div>

			<script type="text/javascript">
				$('#user-<?php echo $this->user->getRuntimeID() ?> .score-dist .target').each(function() {
					var chart = new Highcharts.Chart({
						chart: { renderTo: this, type: 'bar', marginRight: 35 },
						xAxis: { categories: <?php echo json_encode(array_map(function($x) { return $x == 0 ? '-' : $x; }, $this->scoreDistribution[$this->user->getID()]->getGroupsKeys())) ?>, title: { text: 'Rating' } },
						yAxis: { title: { text: 'Count', margin: 15 } },
						tooltip: { formatter: function() {
							var text;
							if (this.x == '-') {
								text = 'Unrated titles: ' + this.y;
							} else {
								text = 'Titles rated with ' + this.x + ': ' + this.y;
							}
							var percent = this.y * 100.0 / <?php echo max(1, $this->scoreDistribution[$this->user->getID()]->getTotalSize()) ?>;
							text = text + ' (' + (Math.round(percent * 100.0) / 100.0) + '%)';
							return text;
						} },
						series: [ {
							data: <?php echo json_encode(array_values($this->scoreDistribution[$this->user->getID()]->getGroupsSizes())) ?>,
							point: { events: { click: function(e) {
								var x = this.category;
								if (x == '-') {
									x = 0;
								}
								$('.export-trigger').removeClass('active');
								toggleWithinSections($('.score-dist .more[data-id=' + x + ']'), true);
							} } }
						} ]
					});
				});
			</script>
		<?php endif ?>
	</div>
</div>


<div class="section score-time-dist">
	<h3>
		<i data-title="How much time have you spent on titles rated with given score?" class="tooltipable icon-tooltip"></i>
		Rating to time distribution
	</h3>
	<div class="section-body">
		<?php if ($this->scoreDistribution[$this->user->getID()]->getRatedCount() == 0): ?>
			<p>Couldn&rsquo;t find ratings on your list.<br>
			Rate some <?php echo $this->mgHelper->amText() ?> and come back in 24 hours.</p>
		<?php else: ?>
			<ul class="infobox">
				<li>
					<div>
						<span class="prefix">Total time</span>
						<span class="subject"><?php printf('%.02f', $this->scoreDurationDistribution[$this->user->getID()]->getTotalTime() / 1440.) ?></span>
						<span class="suffix">days</span>
					</div>
				</li>
				<li>
					<div>
						<span class="prefix">Mean score</span>
						<span class="subject"><?php printf('%.02f', $this->scoreDurationDistribution[$this->user->getID()]->getMeanScore()) ?></span>
						<span class="suffix">(weighted)</span>
					</div>
				</li>
			</ul>

			<div class="wrapper wrapper-target">
				<div class="target"></div>
				<div class="clear"></div>
			</div>

			<div class="wrapper wrapper-more">
				<?php foreach ($this->scoreDurationDistribution[$this->user->getID()]->getGroupsKeys() as $score): ?>
					<?php $entries = $this->scoreDurationDistribution[$this->user->getID()]->getGroupEntries($score) ?>
					<div class="more" data-id="<?php echo $score ?>">
						<p>
							<?php if ($score == 0): ?>
								Unrated titles
							<?php else: ?>
								Titles rated with <?php echo $score ?>
							<?php endif ?>
							<?php if (!empty($entries)): ?>
								&nbsp;(<?php echo count($entries) ?>)
							<?php endif ?>
							:
						</p>
						<?php if (empty($entries)): ?>
							<?php if ($score == 0): ?>
								<p>Horray! No unrated titles.</p>
							<?php else: ?>
								<p>None!</p>
							<?php endif ?>
						<?php elseif ($this->user->getList($this->am)->isPrivate()): ?>
							<p>Can&rsquo;t show you titles from a private list.</p>
						<?php else: ?>
							<ul>
								<?php foreach ($entries as $entry): ?>
									<?php $amEntry = $entry->getAMEntry() ?>
									<li>
										<a href="http://myanimelist.net/<?php echo $this->mgHelper->amText() ?>/<?php echo $amEntry->getID() ?>">
											<?php echo $amEntry->getTitle() ?>
										</a>
										&nbsp;(<?php echo $entry->getCompletedDuration() ?> min.)
									</li>
								<?php endforeach ?>
							</ul>
						<?php endif ?>
					</div>
				<?php endforeach ?>
			</div>

			<script type="text/javascript">
				$('#user-<?php echo $this->user->getRuntimeID() ?> .score-time-dist .target').each(function() {
					var chart = new Highcharts.Chart({
						chart: { renderTo: this, type: 'bar', marginRight: 15 },
						xAxis: { categories: <?php echo json_encode(array_map(function($x) { return $x == 0 ? '-' : $x; }, $this->scoreDistribution[$this->user->getID()]->getGroupsKeys())) ?>, title: { text: 'Rating' } },
						yAxis: { title: {text: 'Hours spent', margin: 15 } },
						tooltip: { formatter: function() {
							var text;
							if (this.x == '-') {
								text = 'Hours spent on unrated titles: ' + Math.round(this.y * 100) / 100.0;
							} else {
								text = 'Hours spent on titles rated with ' + this.x + ': ' + Math.round(this.y * 100) / 100.0;
							}
							var percent = this.y * 100.0 / <?php echo max(1, $this->scoreDurationDistribution[$this->user->getID()]->getTotalSize()) ?>;
							text = text + ' (' + (Math.round(percent * 100.0) / 100.0) + '%)';
							return text
						} },
						series: [ {
							data: <?php echo json_encode(array_map(function($x) { return $x / 60.; }, array_values($this->scoreDurationDistribution[$this->user->getID()]->getGroupsSizes()))) ?>,
							point: { events: { click: function(e) {
								var x = this.category;
								if (x == '-') {
									x = 0;
								}
								toggleWithinSections($('.score-time-dist .more[data-id=' + x + ']'), true);
							} } }
						} ]
					});
				});
			</script>
		<?php endif ?>
	</div>
</div>



<?php if ($this->isFinal): ?>
	<script type="text/javascript">
		$(function() {
			$('.export-trigger').click(function(e) {
				e.preventDefault();
				toggleWithinSections($(this).parents('.section').find('.more.export'), true);
				$(this).toggleClass('active');
			});

			var types =
			[
				{ 'type': 1, 'name': 'Anime' },
				{ 'type': 2, 'name': 'Manga' },
				{ 'type': 3, 'name': 'Anime & manga' },
			];
			$('select[name=\'type\']').each(function() {
				for (var i in types) {
					$(this).append($('<option/>').text(types[i]['name']).data('type', types[i]['type']));
				}
				$(this).change(function() {
					var textarea = $(this).parents('.export').find('textarea');
					var type = $(this).find('option:selected').data('type');
					textarea.val(textarea.val().replace(/(type=[0-9]*)/, 'type=' + type));
				});
			});

			var themes =
			[
				{ 'params': { }, 'name': 'Blue (default)' },
				{ 'params': { 'bar1': '00ffaaaa', 'bar2': '00ee6677', 'line1': 'c0ffaaaa', 'line2': 'c0ee6677', 'back': 'ffffffff', 'font1': '20442233', 'font2': '85aa4444', 'title': '00cc5566' }, 'name': 'Pink' },
				{ 'params': { 'bar1': '0044ff44', 'bar2': '00008800', 'line1': 'dd44ff44', 'line2': 'dd00aa00', 'back': 'ffffffff', 'font1': '20227722', 'font2': '90227722', 'title': '00227722' }, 'name': 'Green' },
				{ 'params': { 'bar1': '00eecc05', 'bar2': '00dd2200', 'line1': 'aaffdd00', 'line2': 'aaff0000', 'back': 'ffffffff', 'font1': '20220700', 'font2': '90220700', 'title': '00220700'  }, 'name': 'Flame (yellow + red)' },
				{ 'params': { 'bar1': 'aa000000', 'bar2': '33000000', 'line1': 'ff000000', 'line2': 'dd000000', 'back': 'ffffffff', 'font1': '20000000', 'font2': '90000000', 'title': '20000000' }, 'name': 'Gray' },
				{ 'params': { 'bar1': '0084a0d4', 'bar2': '0003359a', 'line1': '00446084', 'line2': '0001156a', 'back': '00000000', 'font1': '00779fe2', 'font2': '50779fe2', 'title': '00779fe2' }, 'name': 'unBlue (blue on black)' },
				{ 'params': { 'bar1': '0044ff44', 'bar2': '00008800', 'line1': '00004400', 'line2': '00008800', 'back': '00000000', 'font1': '2044ff44', 'font2': '00008800', 'title': '0033aa33' }, 'name': 'Matrix (green on black)' },
			];
			$('select[name=\'theme\']').each(function() {
				for (var i in themes) {
					$(this).append($('<option/>').text(themes[i]['name']).data('params', themes[i]['params']));
				}
				$(this).change(function() {
					var textarea = $(this).parents('.export').find('textarea');
					var params = $(this).find('option:selected').data('params');
					var merged = '';
					for (key in params) {
						merged += '&' + key + '=' + params[key];
					}
					textarea.val(textarea.val().replace(/(type=[0-9]*).*?\[/, '$1' + merged + '['));
				});
			});

			$('.more.export textarea').click(function() {
				$(this).select();
			});

			$('.btn.export-show').mousedown(function() {
				var textarea = $(this).parents('.export').find('textarea');
				var matches = textarea.val().match(/\[img\]([^\[]*)\[\/img]/);
				$(this).attr('href', matches[1]);
			});
		});
	</script>
<?php endif ?>
