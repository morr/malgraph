<?php iterateUsers(function($user, $otherUser) { ?>
<div class="section list">
	<h2>
		<?php echo ChibiRegistry::getHelper('mg')->headerLink($user, $this->mgHelper->amText() . ' titles') ?>
	</h2>
	<?php $showUnique = ((count($this->users) > 1) and (!$otherUser->getList($this->am)->isPrivate())) ?>

	<div class="section-body">
		<?php if (count($user->getList($this->am)->getEntries()) == 0): ?>
			<p>Sadly, <?php echo $user['visible-name'] ?>&rsquo;s <?php echo $this->mgHelper->amText() ?> list is empty.<br>
			If this is your list, add (and rate) something and come back in 24 hours.</p>
		<?php elseif ($user->getList($this->am)->isPrivate()): ?>
			<p>Sadly, <?php echo $this->mgHelper->amText() ?> list of this user is private.</p><p>If this is your list, you can <a href="http://myanimelist.net/editprofile.php?go=listpreferences">click here</a> and change your privacy settings to make it visible.</p>
		<?php else: ?>

			<div class="table">
				<table class="tablesorter">
					<thead>
						<tr>
							<th class="status" data-tooltip="Status">S</th>
							<?php if ($showUnique): ?>
								<th class="unique" data-tooltip="Unique - titles marked with &bdquo;+&rdquo;|are unique to this user.">U</th>
							<?php endif ?>
							<th class="title">Title</th>
							<th class="score" data-tooltip="Rating">R</th>
						</tr>
					</thead>

					<?php ChibiRegistry::getHelper('benchmark')->benchmark('tbody') ?>

					<tbody>
						<?php $k = 1 ?>
						<?php foreach ($user->getList($this->am)->getEntries() as $e): ?>
							<?php $e2 = null ?>
							<?php if ($showUnique): ?>
								<?php $e2 = $otherUser->getList($this->am)->getEntryByID($e->getID()) ?>
								<?php if (empty($e2)): ?>
									<tr class="unique">
								<?php else: ?>
									<tr class="not-unique">
								<?php endif ?>
							<?php else: ?>
								<tr>
							<?php endif ?>
								<td class="status status-<?php echo $e->getStatus() ?>"></td>

								<?php if ($showUnique): ?>
									<td class="unique"></td>
								<?php endif ?>

								<td class="title" data-sorter="<?php echo $e->getAMEntry()->getTitle() ?>">
									<a href="http://myanimelist.net/<?php echo ChibiRegistry::getHelper('mg')->amText() ?>/<?php echo $e->getID() ?>">
										<?php if (!$e->getAMEntry()->getTitle()): ?>
											Unknown Entry ID <?php echo $e->getID() ?>
										<?php else: ?>
											<?php echo $e->getAMEntry()->getTitle() ?>
										<?php endif ?>
									</a>
								</td>

								<?php if (empty($e2)): ?>
									<td class="score" data-score1="<?php echo $e->getScore() ?>" data-score2="0">
								<?php else: ?>
									<td class="score" data-score1="<?php echo $e->getScore() ?>" data-score2="<?php echo $e2->getScore() ?>">
								<?php endif ?>
									<?php echo !$e->getScore() ? '-' : $e->getScore() ?>
								</td>
							</tr>
						<?php endforeach ?>
					</tbody>

					<?php ChibiRegistry::getHelper('benchmark')->benchmark('/tbody') ?>
				</table>
			</div>
		<?php endif ?>

	</div>
</div>
<?php }); ?>



<script type="text/javascript">
	/* add some attributes to cells - we do it here to save output html size */
	<?php
		$icons = [
			UserListEntry::STATUS_PLANNED => [4, 'schedule'],
			UserListEntry::STATUS_DROPPED => [5, 'cross'],
			UserListEntry::STATUS_WATCHING => [1, 'eye'],
			UserListEntry::STATUS_ONHOLD => [3, 'hourglass'],
			UserListEntry::STATUS_COMPLETED => [2, 'tick']];
		foreach ($icons as $status => $info): ?>
		$('.status-<?php echo $status ?>').attr({'data-tooltip': '<?php echo $this->mgHelper->statusText($status) ?>', 'data-sorter': <?php echo $info[0] ?>}).append($('<i class="icon-<?php echo $info[1] ?>"/>'));
	<?php endforeach ?>

	var uniqueRows = $('tr.unique');
	var ununiqueRows = $('tr.not-unique');

	uniqueRows.find('td.unique').attr({'data-tooltip': 'Only this user has|this title on list.', 'data-sorter': 1}).append($('<i class="icon-plus"/>'));
	ununiqueRows.find('td.unique').attr({'data-tooltip': 'Both users have this|title on their lists.', 'data-sorter': 0}).append($('<i class="icon-dot"/>'));

	$('tr td.score').each(function() { $(this).attr('data-sorter', $(this).attr('data-score1')); });
	var quot = $('<div/>').html('&rsquo;').text();
	ununiqueRows.find('td.score').filter(function(i) { return $(this).attr('data-score1') > $(this).attr('data-score2') && $(this).attr('data-score2') > 0; }).each(function() { $(this).addClass('higher-score').attr('data-tooltip', 'Rated lower (' + $(this).attr('data-score2') + ')|by the other user.'); });
	ununiqueRows.find('td.score').filter(function(i) { return $(this).attr('data-score1') > $(this).attr('data-score2') && $(this).attr('data-score2') == 0; }).each(function() { $(this).addClass('no-score').attr('data-tooltip', 'Not rated by the other user.'); });
	ununiqueRows.find('td.score').filter(function(i) { return $(this).attr('data-score1') < $(this).attr('data-score2') && $(this).attr('data-score1') > 0; }).each(function() { $(this).addClass('lower-score').attr('data-tooltip', 'Rated higher (' + $(this).attr('data-score2') + ')|by the other user.'); });
	ununiqueRows.find('td.score').filter(function(i) { return $(this).attr('data-score1') < $(this).attr('data-score2') && $(this).attr('data-score1') == 0; }).each(function() { $(this).addClass('no-score').attr('data-tooltip', 'Not rated by this user.'); });
	ununiqueRows.find('td.score').filter(function(i) { return $(this).attr('data-score1') == $(this).attr('data-score2') && $(this).attr('data-score1') > 0; }).each(function() { $(this).addClass('same-score').attr('data-tooltip', 'Rated with the same score.'); });
	ununiqueRows.find('td.score').filter(function(i) { return $(this).attr('data-score1') == $(this).attr('data-score2') && $(this).attr('data-score1') == 0; }).each(function() { $(this).addClass('no-score').attr('data-tooltip', 'Neither side rated this title.'); });
	uniqueRows.find('td.score').attr('data-tooltip', 'This title is unique to this user.');

	$(function() {
		if ($('th.unique').length > 0) {
			sortList = [[1,0],[2,0]];
		} else {
			sortList = [[2,1],[1,0]];
		}
		$('table').tablesorter({
			textExtraction: function(node) {
				return $(node).attr('data-sorter');
			},
			sortList : sortList
		});

		$(window).trigger('resize');
	});

</script>
